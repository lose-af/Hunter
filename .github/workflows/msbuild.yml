name: MSBuild

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1
     
    - name: Download Server
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        mkdir D:/BDS
        ServerLink=$(cat 'LINK.txt')
        curl -L -o D:/BDS/server.zip "$ServerLink"
        unzip D:/BDS/server.zip -d D:/BDS > /dev/null
      shell: bash

    - name: Build Library
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        git clone https://github.com/LiteLDev/LiteLoaderSDK.git
        ls
        mkdir SDK
        mv ./LiteLoaderSDK/* ./SDK
        cd SDK/Tools
        mkdir ../LiteLoader
        mkdir ../LiteLoader/Lib
        ./LibraryBuilder.exe D:/BDS
        mv ../LiteLoader/Lib/* ../Lib/
      shell: bash

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        MSBuild.exe ./Hunter.sln -property:Configuration=Release
      shell: bash
    
    - name: MkDirs
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        mkdir D:/out/sdk
        mkdir D:/out/sdk/Lib
        mkdir D:/out/sdk/Header
        mkdir D:/out/plugins
    
    - name: Copy Out Files
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        ls
        cp D:/Desktop/mc/plugins/*.dll D:/out/plugins
        cp D:/Desktop/mc/plugins/*.lib D:/out/sdk/Lib
        cp D:/Desktop/mc/plugins/*.pdb D:/out/plugins
      shell: bash

    - name: Upload plugins
      uses: actions/upload-artifact@v1.0.0
      with:
        name: plugins
        path: D:/out/plugins

    - name: Compress to zip
      run: |
        7z a D:/out/plugins.zip D:/out/plugins
      shell: bash
